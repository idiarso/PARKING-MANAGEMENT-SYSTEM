<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="BtnClose.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAGUAAABfCAYAAADxnQkEAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAO
        wgAADsIBFShKgAAAA7xJREFUeF7tmjGS4jAQRfcsG24+t+IQXIEbcAFyclIyMjIiIiISMrb+FN5yabrl
        NhLW19b/VS+Zsi1Gz5Zasn/9/vP1FFxICiGSQoikECIphEgKIZJCiKQQIimESAohkkKIpBAiKYRICiFN
        pFyv1+rs93uzrRQcZ53/LlYbpTSR8okcj0ezrRQcVzNWG6VISmGsNkqRlMJYbZTSRMrlcvkej+/3++tf
        m5/b7fZvXD+fz8/tdmu2lYLjhvbB4/F4XTEW/ObhXFzHaqOUJlLGrNfr77t3TudAgnWtd4HgXCAABcJq
        tTLPr01zKQOQM9U540SrrSkOh8Prij+DpyL6BNaERgrAnRgVgycLIq3rRNlsNq+r/Qx+x1JPRgqVFICO
        iM416DjrGhFy7bQUAuikANzB0TnmdDqZ15gC85IVtIv2rXOWglIKwFgezW63M6/hgfnICoMQQCsFeJ2X
        Bp0ZHW5yT2Gt4qEUaikAw1MkKFut81O8QoJFCKCXArzxP83Uqt4TXHvdU0oXUjA0RUtlb07AvGOFTQjo
        QgqIlso4Jp1fsJ6x5pHWpa9HN1JAtFRO96Qw36RhFQK6kgKipfIwcVu7wiylr0d3UkCkVEbHW/ta7EJA
        l1JAtFROw1T6enQrBURL5SE9CAFdS5lTKjOWvh5dSwHRUjn6upiB7qWAaKms4WthIh9E9FB5gf9CSqRE
        HgIxpW8sP033UnDnzw3zah50LcWbSyIV2ac+D6pBt1Jwp1tCsKiMVmSsZXKXUrz1Cf42HBMd1hgrsi6l
        WLu+1gSe+6ZrnBbfduXoToq3teJ9PGEJTMNWKnclxduExN+t44E396SxXo61ohsp3lok8sFE9B3MeE5q
        SRdSPCF4AqJ3d3Srn6Eio5firUWQuRN0ZP2CtN68pJaSE/JOx3kfUFhpWSrTSsktAKMf3ll4nxqlgbxW
        FRmlFG9xiNSokqJvLCGmxeYlnZScEKTG3TvVxjg4rvQmmAuVlKnOwgrdOu8dcvNVmqU3L2mkoJLKdVLJ
        POIR3YZBMOQt9cQ0l4I7NjLGf2rSxVMQDZ7iJfbJFpWCfwilLICI6LiOYILHOcP5KFnnTsI4fvwbwBwp
        Q9LfUlvUolIim4Nzgg6x2vHA8Z9I7aFVUipEUkaRlApISoxFpYgYkkKIpBAiKYRICiGSQoikECIphEgK
        IZJCiKQQIimESAohkkKIpBAiKYRICiGSQoikECIphEgKIZJCiKQQIimESAohkkKIpBAiKYRICiGSQoik
        ECIphEgKHV/Pv3jtYWzeylIwAAAAAElFTkSuQmCC
</value>
  </data>
  <metadata name="biayaParkirBindingSource.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
</root>